

(**)
(*******************************************************
 *
 * Subsystem:    Opcode definitions for 8080 target machine
 *
 * Description:  This file contains the definitions of all
 *               of the basic operations generated by the
 *               general code generator.
 *
 * S.H.Smith
 *)


const

(* define instruction set and code generator version *)
   generatorversion  = '8080 Code Generator';

(* define assembler pseudo-ops *)
   op_start_module   = ' TITLE ';          {start new program module}
   op_include_libs   = ' MACLIB D6801HDR'; {include runtime libraries}
   op_end_module     = ' END ';            {end program module}
   op_comment        = ';';                {start comment character}
   op_equate         = ': ';               {equate a label to current address}
   op_define_bytes   = ' DB ';             {deefine literal data bytes}
   op_reserve_bytes  = ' DS ';             {reserve bytes with a label}

(* program flow control opcodes *)
   op_call           = ' CALL ';           {call subroutine}
   op_return         = ' RET ;';           {return from subroutine}
   op_jump           = ' JMP ';            {jump to label}
   op_test_zero      = ' ANA A';           {test boolean and set zero flag}
   op_jump_zero      = ' JZ ';             {jump if zero condition}
   op_jump_not_zero  = ' JNZ ';            {jump if notzero confition}

(* 'byte' and 'boolean' data type manipulation *)
   op_push_byte      = ' PUSH PSW';        {push current value}
   op_pop_byte       = ' POP PSW';         {pop value from stack}
   op_lit_byte       = ' MVI A,';          {load literal value}
   op_load_byte      = ' LDA ';            {load from variable}
   op_store_byte     = ' STA ';            {store into variable}

(* 'integer' data type manipulation *)
   op_push_integer   = ' PUSH H';
   op_pop_integer    = ' POP H';
   op_lit_integer    = ' LXI H,';
   op_load_integer   = ' LHLD ';
   op_store_integer  = ' SHLD ';


