
-----------------------------------------------------------
--                                                       --
--       quelib.lib - Queue and stack manipulation       --
--                                                       --
--             Author: S.H.Smith, 10-Apr-86              --
--                                                       --
-----------------------------------------------------------

package quelib is

-----------------------------------------------------------
--                                                       --
--                 Queue data types                      --
--                                                       --
-----------------------------------------------------------

   subtype queue_data_type is integer;
      -- user defined queue entry
      -- data type is inserted here

   type queue_type is limited private;
      -- declare your queues with this type


-----------------------------------------------------------
--                                                       --
--            Queue creation and destruction             --
--                                                       --
-----------------------------------------------------------

   procedure create(que:  out queue_type;
                    name: in  string);
      -- create a new queue

   procedure destroy(que: in out queue_type);
      -- dispose of a queue and all of it's entries


-----------------------------------------------------------
--                                                       --
--                Misc queue manipulation                --
--                                                       --
-----------------------------------------------------------

   function entries(que: in queue_type) return integer;
      -- return count of active entries in queue

   procedure sort(que: in queue_type);
      -- sort the entries in a queue according to the
      -- value of the queue data entries


-----------------------------------------------------------
--                                                       --
--                     Enque functions                   --
--                                                       --
-----------------------------------------------------------

   procedure add_top(que:  in queue_type;
                     data: in queue_data_type);
      -- add a new entry at the top of a queue

   procedure add_bottom(que:  in queue_type;
                        data: in queue_data_type);
      -- add a new entry at the bottom of a queue


-----------------------------------------------------------
--                                                       --
--                    Deque functions                    --
--                                                       --
-----------------------------------------------------------

   function get_top(que: in queue_type) return queue_data_type;
      -- dequeue the top entry from a queue

   function get_bottom(que: in queue_type) return queue_data_type;
      -- dequeue the bottom entry from a queue


-----------------------------------------------------------
--                                                       --
--                       Exceptions                      --
--                                                       --
-----------------------------------------------------------

   empty_queue:  exception;


private

-----------------------------------------------------------
--                                                       --
--       Private queue and entry representation          --
--                                                       --
-----------------------------------------------------------

   type queue_entry_rec;
   type queue_entry is access queue_entry_rec;

   type queue_entry_rec is record
      data:  queue_data_type;  -- data for this entry
      next:  queue_entry;      -- next entry in queue or null
      prior: queue_entry;      -- prior entry in queue or null
   end record;

   type queue_rec is record
      name:      string(20);   -- the name of the queue
      first:     queue_entry;  -- first entry
      last:      queue_entry;  -- last entry
      count:     integer;      -- number of active entries
   end record;

   type queue_type is access queue_rec;


end quelib;

